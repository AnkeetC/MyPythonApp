name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up kubectl and Minikube
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl
          
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: |
          minikube start --driver=docker --extra-config=kubelet.cgroup-driver=systemd

      - name: Set up kubectl (again, as Minikube may change kubeconfig)
        run: |
          minikube kubectl -- get pods --all-namespaces

      - name: Install dependencies
        run: |
          # Your Python dependencies installation

      - name: Run Tests
        run: |
          # Your test execution

      - name: Build Docker Image
        run: | 
          docker build -t ankeetchauhan505/hello-world-app:latest .

      - name: Deploy to Minikube
        run: |
          kubectl create deployment hello-world-app --image=ankeetchauhan505/hello-world-app:latest --port=8080
          kubectl expose deployment hello-world-app --type=NodePort --port=8080

      - name: Get NodePort
        run: |
          NODE_PORT=$(kubectl get service hello-world-app -o jsonpath='{.spec.ports[0].nodePort}')
          echo "NodePort: $NODE_PORT"

      - name: Install Prometheus, Node Exporter, and Grafana
        run: |
         # Install Prometheus
         curl -LO https://raw.githubusercontent.com/prometheus/prometheus/main/documentation/examples/prometheus-k8s/prometheus-deployment.yaml
         kubectl apply -f prometheus-deployment.yaml

          # Install Prometheus Node Exporter
          curl -LO https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz
          tar xzf node_exporter-1.2.2.linux-amd64.tar.gz
          kubectl create configmap node-exporter-config --from-file=node_exporter-1.2.2.linux-amd64/node-exporter.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus/node_exporter/master/deploy/kube/node-exporter-service-account.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus/node_exporter/master/deploy/kube/node-exporter-daemonset.yaml
          
          # Install Grafana
          kubectl apply -f https://raw.githubusercontent.com/grafana/helm-charts/main/charts/grafana/values.yaml
          kubectl apply -f https://raw.githubusercontent.com/grafana/helm-charts/main/charts/grafana/templates/serviceaccount.yaml
          kubectl apply -f https://raw.githubusercontent.com/grafana/helm-charts/main/charts/grafana/templates/deployment.yaml
          kubectl apply -f https://raw.githubusercontent.com/grafana/helm-charts/main/charts/grafana/templates/service.yaml

          # Wait for Grafana to be ready
          kubectl wait --for=condition=available deployment/grafana --timeout=300s
