name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  mypythonappbuild:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up kubectl and Minikube
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl
          
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: |
          minikube start --driver=docker --extra-config=kubelet.cgroup-driver=systemd

      - name: Set up kubectl (again, as Minikube may change kubeconfig)
        run: |
          minikube kubectl -- get pods --all-namespaces

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement.txt

      - name: Run Tests
        run: |
           pytest 
         
      - name: Build Docker Image
        run: | 
          docker build -t ankeetchauhan505/hello-world-app:latest .

      - name: Deploy to Minikube
        run: |
          kubectl create deployment hello-world-app --image=ankeetchauhan505/hello-world-app:latest --port=8080
          kubectl expose deployment hello-world-app --type=NodePort --port=8080

      - name: Get NodePort
        run: |
          NODE_PORT=$(kubectl get service hello-world-app -o jsonpath='{.spec.ports[0].nodePort}')
          echo "NodePort: $NODE_PORT"

     #  - name: Apply Deployment and Service YAMLs
       #  run: |
        #  kubectl apply -f deployment.yml
        #  kubectl apply -f service.yml
        #  kubectl get service hello-world-app -o jsonpath='{.spec.ports[0].nodePort}' > nodeport.txt
        #  cat nodeport.txt
   

     # - name: Access Application
       # run: |
        #curl http://localhost:$NODE_PORT

      # - name: Access Application
        # run: |
        #  NODE_PORT=$(cat nodeport.txt)
        #  curl http://localhost:$NODE_PORT
 
      - name: Install Prometheus, Node Exporter, and Grafana
        run: |
          sudo apt update
          sudo apt install prometheus
          sudo systemctl start prometheus
          sudo systemctl enable prometheus

          # Install Prometheus Node Exporter
          sudo apt install prometheus-node-exporter
          sudo systemctl start prometheus-node-exporter
          sudo systemctl enable prometheus-node-exporter        
          
          # Install Grafan
          wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - 
          sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
          sudo apt update
          sudo apt install grafana
          sudo systemctl start grafana-server
          sudo systemctl enable grafana-server
          

        

